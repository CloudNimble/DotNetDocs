<Project>

    <!-- Folder layout -->
    <PropertyGroup>
        <IsBenchmarkProject Condition="$(MSBuildProjectName.ToLower().EndsWith('.benchmarks'))">true</IsBenchmarkProject>
        <IsTestProject Condition="$(MSBuildProjectName.ToLower().Contains('.tests.'))">true</IsTestProject>
        <IsTestAssetProject Condition="$(RepoRelativeProjectDir.Contains('.resources'))">true</IsTestAssetProject>
        <IsSampleProject Condition="$(MSBuildProjectName.ToLower().Contains('.samples.'))">true</IsSampleProject>
        <IsTemplateProject Condition="$(MSBuildProjectName.ToLower().Contains('.templates.'))">true</IsTemplateProject>
        <IsTemplatePackageProject Condition="$(MSBuildProjectName.ToLower().Contains('.templates.package'))">true</IsTemplatePackageProject>
        <IsNetCore Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('$(TargetFramework)', '^net([8-9]|[1-3][0-9])\.'))">true</IsNetCore>
        <IsPrimaryProject Condition=" ('$(IsBenchmarkProject)' != 'true' And '$(IsTestProject)' != 'true' And '$(IsTestAssetProject)' != 'true' And '$(IsSampleProject)' != 'true') or '$(IsTemplatePackageProject)' == 'true' ">true</IsPrimaryProject>
        <IncludeReadmeFile Condition="Exists('$(MSBuildProjectDirectory)\readme.md')">true</IncludeReadmeFile>

        <IncludeSource>false</IncludeSource>
        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>

        <!--<AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)easyaf.snk</AssemblyOriginatorKeyFile>
        <StrongNamePublicKey>PublicKey=0024000004800000940000000602000000240000525341310004000001000100e172643e638d594b6f6172dd483884b936afc42f04816f78e687d02ce85647acec0b03d8632166230e4425a336ea8be9e1bf1896fe114e0049f88770c1707f9432cbab03b37a0761acdf05c940e2f7e87ea54dbf8cfbbd92b3361cc37712c18172a204e0ec04aaefbaee6b838c55dd56c0862f4436db8d48769ea63aaea632de</StrongNamePublicKey>-->

        <LangVersion>preview</LangVersion>

        <DefaultItemExcludes>$(DefaultItemExcludes);*.csproj.vspscc</DefaultItemExcludes>
        <Configurations>Debug;Release;DEV;BETA;PROD</Configurations>

        <!-- Default to Debug configuration if none is specified -->
        <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    </PropertyGroup>

    <PropertyGroup>
        <PackageId Condition="'$(IsPackable)'=='true'">$(MSBuildProjectName.Replace('CloudNimble.', ''))</PackageId>
        <Product>DotNetDocs</Product>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <PackageVersion>1.0.0</PackageVersion>
        <Authors>CloudNimble</Authors>
        <Company>CloudNimble, Inc.</Company>
        <RpmPackageVendor>CloudNimble</RpmPackageVendor>
        <Copyright>Copyright Â© 2025-2026 CloudNimble, Inc. All rights reserved.</Copyright>
        <NeutralLanguage>en-US</NeutralLanguage>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PackageReadmeFile Condition="$(IncludeReadmeFile) == 'true'">readme.md</PackageReadmeFile>
        <!--
      Suppress a warning about upcoming deprecation of PackageLicenseUrl. When embedding licenses are supported,
      replace PackageLicenseUrl with PackageLicenseExpression.
    -->
        <NoWarn>$(NoWarn);NU5125;NU5048;NU5128;</NoWarn>
        <!-- Suppress warnings about using SemVer 2.0. -->
        <NoWarn>$(NoWarn);NU5105</NoWarn>

        <!-- Contact email address for NuGet packages and Linux installers. -->
        <MaintainerEmail>opensource@nimbleapps.cloud</MaintainerEmail>

        <PackageIcon>easyaf-logo.png</PackageIcon>
        <PackageProjectUrl>https://easyaf.dev/dotnetdocs</PackageProjectUrl>
        <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
        <PackageTags>easyaf;docs;docfx;documentation;mintlify</PackageTags>
        <Serviceable>true</Serviceable>

        <RepositoryRoot>$(MSBuildThisFileDirectory)</RepositoryRoot>
        <RepositoryUrl>https://github.com/CloudNimble/DotNetDocs.git</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
    </PropertyGroup>

    <!-- Compilation options -->
    <PropertyGroup>
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
        <ImplicitUsings>disable</ImplicitUsings>
        <Nullable>enable</Nullable>

        <!-- Instructs the compiler to use SHA256 instead of SHA1 when adding file hashes to PDBs. -->
        <ChecksumAlgorithm>SHA256</ChecksumAlgorithm>

        <!-- Fixes a common error in targets implementing a NoBuild mode. -->
        <BuildProjectReferences Condition=" '$(NoBuild)' == 'true' ">false</BuildProjectReferences>

        <!-- Suppress warnings about uninstantiated classes. -->
        <NoWarn>$(NoWarn);CA1812</NoWarn>

        <NoWarn>$(NoWarn);NU1510</NoWarn>
    </PropertyGroup>

    <PropertyGroup>
        <StandardTestTfms>net10.0;net9.0;net8.0</StandardTestTfms>
    </PropertyGroup>

    <PropertyGroup>
        <SkipDefaultEditorConfigAsAdditionalFile>true</SkipDefaultEditorConfigAsAdditionalFile>
    </PropertyGroup>

    <PropertyGroup Condition=" $(IsTestProject) == 'true' ">
        <NoWarn>$(NoWarn);CA1001;CA1707;CA2007;CA1801;CS1591</NoWarn>

        <EnableMSTestRunner>true</EnableMSTestRunner>
        <TestingPlatformDotnetTestSupport>true</TestingPlatformDotnetTestSupport>
        <TestingPlatformShowTestsFailure>true</TestingPlatformShowTestsFailure>

        <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
        <IsPackable>false</IsPackable>
    </PropertyGroup>

    <PropertyGroup Condition=" $(IsSampleProject) == 'true' ">
        <NoWarn>$(NoWarn);CA1001;CA1707;CA1716;CA1801;CA1822</NoWarn>
    </PropertyGroup>

    <PropertyGroup>
        <SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>
    </PropertyGroup>

    <PropertyGroup Condition=" $(IsPrimaryProject) == 'true' ">
        <CollectCoverage>true</CollectCoverage>
        <CoverletOutputFormat>opencover</CoverletOutputFormat>
        <CoverletOutput>$(MSBuildProjectDirectory)/Coverage/</CoverletOutput>
        <Exclude>[*.Tests.*]*,[*]*.Program,[*]*Migrations*</Exclude>
    </PropertyGroup>

    <PropertyGroup Condition=" $(IsPrimaryProject) == 'true' and '$(IsTemplateProject)' != 'true' ">
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <DocumentationFile>bin\$(Configuration)\$(TargetFramework)</DocumentationFile>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(IsTemplateProject)' == 'true' And '$(IsTemplatePackageProject)' != 'true'">
        <IsPackable>false</IsPackable>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(IsTemplateProject)' != 'true' And '$(IsTemplatePackageProject)' != 'true'">
        <!--<SignAssembly>true</SignAssembly>-->
    </PropertyGroup>

    <ItemGroup Condition=" $(IsTestProject) != 'true' and $(IsSampleProject) != 'true' AND $(IsTemplateProject) != 'true'">
        <!--<InternalsVisibleTo Include="$(AssemblyName.Replace('CloudNimble.DotNetDocs', 'CloudNimble.DotNetDocs.Tests')), $(StrongNamePublicKey)" />-->
        <InternalsVisibleTo Include="$(AssemblyName.Replace('CloudNimble.DotNetDocs', 'CloudNimble.DotNetDocs.Tests'))" />
    </ItemGroup>

    <ItemGroup Condition=" $(IsTestProject) == 'true' and $(IsSampleProject) != 'true' ">
        <PackageReference Include="coverlet.collector" Version="6.*" PrivateAssets="All" />
        <PackageReference Include="FluentAssertions" Version="6.*" PrivateAssets="All" />
        <PackageReference Include="FluentAssertions.Analyzers" Version="0.*" PrivateAssets="All" />
        <PackageReference Include="MSTest" Version="3.*" />
        <PackageReference Include="Breakdance.Assemblies" Version="*-*" />
    </ItemGroup>

    <!-- RWM: Leverage defaults to include standard things in the NuGet package if they are available.-->
    <ItemGroup>
        <None Include="$(MSBuildThisFileDirectory)easyaf-logo.png" Pack="true" PackagePath="\" Condition="'$(IsTestProject)' != 'true'" />
        <None Include="readme.md" Pack="true" PackagePath="\" Condition="$(IncludeReadmeFile) == 'true'" />
    </ItemGroup>

</Project>

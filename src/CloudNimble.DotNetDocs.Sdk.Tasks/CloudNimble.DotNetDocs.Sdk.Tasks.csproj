<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <!-- Multi-target to support different MSBuild hosts -->
        <TargetFrameworks>net10.0;net9.0;net8.0;netstandard2.0</TargetFrameworks>
        <GenerateDocumentationFile>false</GenerateDocumentationFile>
        <IsPackable>false</IsPackable>
        <Description>MSBuild tasks for CloudNimble.DotNetDocs.Sdk</Description>
        
        <!-- Ensure all dependencies are copied to output -->
        <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
        
        <!-- Suppress warnings about MSBuild packages -->
        <NoWarn>$(NoWarn);NU1701</NoWarn>
    </PropertyGroup>

    <ItemGroup>
        <!-- MSBuild task dependencies -->
        <!-- MSBuild SDK references with PrivateAssets to avoid conflicts -->
        <PackageReference Include="Microsoft.Build" Version="17.*" PrivateAssets="all" ExcludeAssets="runtime" />
        <PackageReference Include="Microsoft.Build.Utilities.Core" Version="17.*" PrivateAssets="all" ExcludeAssets="runtime" />
        <PackageReference Include="Microsoft.Build.Framework" Version="17.*" PrivateAssets="all" />
    </ItemGroup>

    <!-- Framework-specific dependencies -->
    <ItemGroup Condition="'$(TargetFramework)' == 'net8.0'">
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="9.*" />
    </ItemGroup>

    <ItemGroup Condition="'$(TargetFramework)' == 'net9.0'">
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="9.*" />
    </ItemGroup>

    <ItemGroup Condition="'$(TargetFramework)' == 'net10.0'">
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="10.*-*" />
    </ItemGroup>

    <ItemGroup  Condition="'$(TargetFramework)' != 'netstandard2.0'">
        <ProjectReference Include="..\CloudNimble.DotNetDocs.Core\CloudNimble.DotNetDocs.Core.csproj" />
        <ProjectReference Include="..\CloudNimble.DotNetDocs.Mintlify\CloudNimble.DotNetDocs.Mintlify.csproj" />
    </ItemGroup>

    <!-- For .NET Framework, we'll implement a simpler fallback -->
    <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
        <PackageReference Include="System.ValueTuple" Version="4.*" />
    </ItemGroup>

</Project>
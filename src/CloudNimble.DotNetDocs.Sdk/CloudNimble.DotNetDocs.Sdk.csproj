<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <!-- Multi-target for compatibility -->
        <TargetFrameworks>net8.0;netstandard2.0</TargetFrameworks>
        <GenerateDocumentationFile>false</GenerateDocumentationFile>
        <Description>
            MSBuild SDK for DotNetDocs projects (.docsproj) - provides a clean way to include documentation in .NET
            solutions
        </Description>

        <!-- This is an MSBuild SDK package -->
        <DevelopmentDependency>true</DevelopmentDependency>
        <PackageType>MSBuildSdk</PackageType>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>

        <!-- Suppress warnings about SDK packages -->
        <NoWarn>$(NoWarn);NU5128;CS2008;NU1701;NU5100</NoWarn>

        <!-- Include build output in tasks folder instead of lib -->
        <IncludeBuildOutput>true</IncludeBuildOutput>
        <BuildOutputTargetFolder>tasks</BuildOutputTargetFolder>
        <ContentTargetFolders>.</ContentTargetFolders>
        
        <!-- Don't create symbols package for SDK projects -->
        <IncludeSymbols>false</IncludeSymbols>
        
        <!-- Copy dependencies for task execution -->
        <!--<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>-->
    </PropertyGroup>

    <ItemGroup>
        <!-- MSBuild task dependencies - don't include in package dependencies -->
        <PackageReference Include="Microsoft.Build.Framework" Version="17.*" PrivateAssets="all" />
        <PackageReference Include="Microsoft.Build.Utilities.Core" Version="17.*" PrivateAssets="all" ExcludeAssets="runtime" />
        <PackageReference Include="System.Collections.Immutable" Version="9.*" PrivateAssets="all" />
        
        <!-- Include Microsoft.Build.NoTargets for bundling its SDK files -->
        <PackageReference Include="Microsoft.Build.NoTargets"
                          Version="3.7.0"
                          PrivateAssets="all"
                          GeneratePathProperty="true" />
    </ItemGroup>

    <!-- Framework-specific dependencies -->
    <ItemGroup Condition="'$(TargetFramework)' == 'net8.0'">
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="9.*" />
    </ItemGroup>

    <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
        <PackageReference Include="System.ValueTuple" Version="4.*" />
    </ItemGroup>

    <!-- Project references that will become NuGet dependencies -->
    <ItemGroup Condition="'$(TargetFramework)' != 'netstandard2.0'">
        <ProjectReference Include="..\CloudNimble.DotNetDocs.Core\CloudNimble.DotNetDocs.Core.csproj" />
        <ProjectReference Include="..\CloudNimble.DotNetDocs.Mintlify\CloudNimble.DotNetDocs.Mintlify.csproj" />
    </ItemGroup>

    <ItemGroup>
        <!-- Pack the SDK files -->
        <None Include="Sdk\**" Pack="true" PackagePath="Sdk" />
        <None Include="build\**" Pack="true" PackagePath="build" />
    </ItemGroup>

    <!-- Include NoTargets SDK files directly from package in NuGet -->
    <Target Name="IncludeNoTargetsInPackage" BeforeTargets="GenerateNuspec">
        <PropertyGroup>
            <NoTargetsSourcePath>$(PkgMicrosoft_Build_NoTargets)\Sdk</NoTargetsSourcePath>
        </PropertyGroup>
        
        <ItemGroup>
            <NoTargetsFiles Include="$(NoTargetsSourcePath)\**\*" />
            <None Include="@(NoTargetsFiles)" Pack="true" PackagePath="Sdk\NoTargets\%(RecursiveDir)%(Filename)%(Extension)" />
        </ItemGroup>
        
        <Message Text="Including NoTargets SDK files in package from $(NoTargetsSourcePath)" Importance="normal" />
    </Target>


     <!--Provide GetTargetPath for project references--> 
    <Target Name="GetTargetPath" Returns="@(TargetPathItem)">
        <ItemGroup>
            <TargetPathItem Include="$(TargetPath)">
                <TargetFramework>$(TargetFramework)</TargetFramework>
            </TargetPathItem>
        </ItemGroup>
    </Target>

</Project>
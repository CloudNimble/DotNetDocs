name: PR Validation

on:
  pull_request:
    branches: [ main, dev ]
    types: [opened, synchronize, reopened]
  workflow_dispatch:

env:
  DOTNET_VERSION: '10.0.x'
  SOLUTION_FILE: 'src/CloudNimble.DotNetDocs.slnx'

jobs:
  validate:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest]  # Only Windows for .NET 10 preview
        dotnet: ['10.0.x']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install .NET 10 Preview
      shell: pwsh
      run: |
        Write-Host "ðŸ“¥ Installing .NET 10 Preview..."
        Invoke-WebRequest -Uri "https://dot.net/v1/dotnet-install.ps1" -OutFile "dotnet-install.ps1"
        ./dotnet-install.ps1 -Channel 10.0 -Quality preview -InstallDir "$env:ProgramFiles\dotnet"
        echo "$env:ProgramFiles\dotnet" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        dotnet --list-sdks

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}

    - name: Build
      run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release --no-restore

    - name: Test
      run: dotnet test ${{ env.SOLUTION_FILE }} --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.dotnet }}
        path: '**/test-results.trx'
        retention-days: 7

    - name: Pack (validation only)
      run: dotnet pack ${{ env.SOLUTION_FILE }} --configuration Release --no-build --output ./artifacts

    - name: Validate package
      shell: pwsh
      run: |
        Write-Host "ðŸ“¦ Validating NuGet packages..."
        Get-ChildItem ./artifacts/*.nupkg | ForEach-Object {
          Write-Host "âœ… Found package: $($_.Name)"
          # You could add additional validation here, like:
          # - Check package size
          # - Validate package metadata
          # - Check for required files
        }